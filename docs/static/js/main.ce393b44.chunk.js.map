{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifexpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","resp","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifexpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAkB9C,OAAS,0BACAC,SAVY,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMlB,2BACMO,KAAO,OACbC,MAAUT,EACVU,SAlBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAYlB,M,uBCrBAG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,sDAGbI,EAAOC,MAAMH,GAHA,SAIWE,EAJX,8BAIiBE,OAJjB,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACA,yBAAKc,UAAW,0CACZ,yBACIC,IAAQf,EACZgB,IAAQN,IAER,+BAAMA,EAAN,OCPKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAGNxB,EAAQC,GAEPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAIGqB,EDnB2BK,CAAa1B,GAAjCa,EAJuB,EAI7BN,KAAca,EAJe,EAIfA,QAGlB,OACA,oCACA,wBAAIJ,UAAU,qCAAd,IAAsDhB,EAAtD,KAEKoB,GAAW,uBAAGJ,UAAU,oCAAb,aAHhB,IAIQ,yBAAKA,UAAY,aAAjB,IACIH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACAiB,IAAQjB,EAAIC,IAASD,UEhB5BkB,EAAe,WAAO,IAAD,EAGM1C,mBAAS,CAAC,cAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAO9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAIA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACAA,SAAUA,EACV2B,IAAK3B,UCfzB8B,IAASC,OACP,kBAAC,EAAD,MACEC,SAASC,eAAe,U","file":"static/js/main.ce393b44.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return ( <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n        /> < /\r\n        form >\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=HDPswRRVXFOuBrfzKJxZluY2SPoVl8LD`;\r\n    const resp = fetch(url);\r\n    const { data } = await (await resp).json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n\r\n    return ( \r\n    <div className =\"card animate__animated animate__fadeIn\">\r\n        <\r\n        img src = { url }\r\n        alt = { title }\r\n        /> \r\n        <p> { title } </p>\r\n    </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n        return ( \r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\" > { category } </h3>  \r\n\r\n            {loading && <p className=\"animate__animated animate__flash\"> Loading </p> } { \r\n                <div className = \"card-grid\" > {\r\n                    images.map(img => ( \r\n                    <GifGridItem \r\n                    key = { img.id } {...img }\r\n                    />\r\n                    ))\r\n                }\r\n\r\n            </div>  } \r\n                        </>\r\n        )\r\n    }","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        getGifs(category)\r\n\r\n        .then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state; // {data: [], loading: true }\r\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifexpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n\n\n    return (\n        <>\n            <h2>GifexpertApp</h2>\n            <AddCategory setCategories= { setCategories }/>\n            <hr/>\n\n            \n\n            <ol>\n                {\n                    categories.map( category => (\n                    <GifGrid \n                    category={category} \n                    key={category}\n                    />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\n\nimport { GifexpertApp } from './GifexpertApp';\n\n\nReactDOM.render( \n  <GifexpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}